
λ pred n ret
	todo “Call `ret` with `n - 1`”

λ is_zero n true false
	todo “Call `ret_true` if `n = 0` or else call `ret_false`”

λ even n true false
	is_zero n true rec
	λ rec
		pred n recp
		λ recp np
			odd np true false

λ odd n true false
	is_zero n false rec
	λ rec
		pred n recp
		λ recp np
			even np true false

λ C₁ x₁ x₂ (· (λ · (· x₁ x₂)  _  ))
λ C₂       (· (λ ·  _        (·) ))

λ True  (· (λ · (·)  _ ))
λ False (· (λ ·  _  (·)))

True  (λ · true )
False (λ · false)


(f (g x (λ · :)) (λ · :))
